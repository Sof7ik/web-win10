/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Classes.js":
/*!************************!*\
  !*** ./src/Classes.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DesktopItem: () => (/* binding */ DesktopItem),\n/* harmony export */   Program: () => (/* binding */ Program),\n/* harmony export */   TaskPanelElement: () => (/* binding */ TaskPanelElement)\n/* harmony export */ });\n/* harmony import */ var _desktop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./desktop */ \"./src/desktop.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings */ \"./src/settings.js\");\n/* harmony import */ var _explorer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./explorer */ \"./src/explorer.js\");\n/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./browser */ \"./src/browser.js\");\n/* harmony import */ var _assets_icons_programm_icons_close_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../assets/icons/programm-icons/close.svg */ \"./assets/icons/programm-icons/close.svg\");\n/* harmony import */ var _assets_icons_programm_icons_minify_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../assets/icons/programm-icons/minify.svg */ \"./assets/icons/programm-icons/minify.svg\");\n/* harmony import */ var _assets_icons_programm_icons_full_widnow_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../assets/icons/programm-icons/full-widnow.svg */ \"./assets/icons/programm-icons/full-widnow.svg\");\n/* harmony import */ var _assets_icons_desktop_icons_folder_png__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../assets/icons/desktop-icons/folder.png */ \"./assets/icons/desktop-icons/folder.png\");\n/* harmony import */ var _assets_icons_desktop_icons_txt_png__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../assets/icons/desktop-icons/txt.png */ \"./assets/icons/desktop-icons/txt.png\");\n/* harmony import */ var _assets_icons_desktop_icons_settings_png__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../assets/icons/desktop-icons/settings.png */ \"./assets/icons/desktop-icons/settings.png\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass DesktopItem\r\n{\r\n    constructor(id)\r\n    {\r\n        this.el = document.createElement('div');\r\n        this.el.classList.add('desktop-item');\r\n        this.el.dataset.idfile = id;\r\n    }\r\n   \r\n    create(text, what) {\r\n        this.img = document.createElement('img');\r\n        this.img.setAttribute('alt', 'image');\r\n        this.img.classList.add('file-image');\r\n\r\n        this.txt = document.createElement('span');\r\n        this.txt.classList.add('file-name');\r\n        this.txt.innerText = text;\r\n\r\n        this.el.insertAdjacentElement('beforeend', this.img);\r\n        this.el.insertAdjacentElement('beforeend', this.txt);\r\n\r\n        switch (what) {\r\n            case \"folder\":\r\n                this.img.src = _assets_icons_desktop_icons_folder_png__WEBPACK_IMPORTED_MODULE_7__;\r\n                break;\r\n            case \"txt\":\r\n                this.img.src = _assets_icons_desktop_icons_txt_png__WEBPACK_IMPORTED_MODULE_8__;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.el.classList.add(what);\r\n        this.img.classList.add(what);\r\n\r\n        document.querySelector('.desktop-wrapper').insertAdjacentElement('beforeend', this.el);\r\n    }\r\n}\r\n\r\nclass Program\r\n{\r\n    //what MUST BE like \"explorer\", \"notepad\", \"browser\", \"settings\" so like classes in CSS\r\n    constructor(what)\r\n    {\r\n        this.activeClassName = \"active-program\";\r\n\r\n        this.zIndex = 2;\r\n        this.element = document.createElement('div');\r\n        this.element.classList.add(what, this.activeClassName, \"application\");\r\n        this.element.style.zIndex = this.zIndex;\r\n        this.zIndex++;\r\n\r\n        this.taskPanelShortcut = null;\r\n\r\n        this.closeProgram = this.closeProgram.bind(this);\r\n        this.minifyWindow = this.minifyWindow.bind(this);\r\n        this.fullWindow = this.fullWindow.bind(this);\r\n    }\r\n\r\n    renderButtonsPanel() {\r\n        return `\r\n            <button class=\"programm-change-size semi-close\">\r\n                <img class=\"programm-change-size__icon\"\r\n                    src=\"${_assets_icons_programm_icons_minify_svg__WEBPACK_IMPORTED_MODULE_5__}\" \r\n                    alt=\"minify-window\">\r\n            </button>\r\n    \r\n            <button class=\"programm-change-size full-window\">\r\n                <img class=\"programm-change-size__icon full-window\" \r\n                    src=\"${_assets_icons_programm_icons_full_widnow_svg__WEBPACK_IMPORTED_MODULE_6__}\" \r\n                    alt=\"full-window\">\r\n            </button>\r\n            \r\n            <button class=\"programm-change-size close\">\r\n                <img class=\"programm-change-size__icon\"\r\n                    src=\"${_assets_icons_programm_icons_close_svg__WEBPACK_IMPORTED_MODULE_4__}\" \r\n                    alt=\"close\">\r\n            </button>\r\n        `;\r\n    }\r\n\r\n    //создаем передвижение программ\r\n    dragElement(elmnt) {\r\n        var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n        if (document.querySelector('div.left-programm-title')) {\r\n            /* if present, the header is where you move the DIV from:*/\r\n            document.querySelector('div.left-programm-title').onmousedown = dragMouseDown;\r\n        }\r\n        else\r\n        {\r\n            /* otherwise, move the DIV from anywhere inside the DIV:*/\r\n            elmnt.onmousedown = dragMouseDown;\r\n        }\r\n    \r\n        function dragMouseDown(e) {\r\n        e = e || window.event;\r\n        // get the mouse cursor position at startup:\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n        document.onmouseup = closeDragElement;\r\n        // call a function whenever the cursor moves:\r\n        document.onmousemove = elementDrag;\r\n        }\r\n    \r\n        function elementDrag(e) {\r\n        e = e || window.event;\r\n        // calculate the new cursor position:\r\n        pos1 = pos3 - e.clientX;\r\n        pos2 = pos4 - e.clientY;\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n        // set the element's new position:\r\n        elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\r\n        elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\r\n        }\r\n    \r\n        function closeDragElement() {\r\n        /* stop moving when mouse button is released:*/\r\n        document.onmouseup = null;\r\n        document.onmousemove = null;\r\n        }\r\n    }\r\n\r\n    openTxt(fileName, what, msg = '', isNew = 0)\r\n    {\r\n        let aboutMeValue = '';\r\n\r\n        msg === null ? aboutMeValue = '' : aboutMeValue = msg;\r\n\r\n        // aboutMeValue = `Привет, я учусь в Щелковской шараге на 3 курсе на web-разраба. Вроде как фулл стэк, но даже код для этого проекта я частично Ctrl+C — Ctrl+V...`;\r\n\r\n        this.element.dataset.isNew = isNew === 1 ? '1' : '0';\r\n\r\n        this.element.insertAdjacentHTML('afterbegin', `\r\n            <div class=\"title\">\r\n                <div class=\"left-programm-title\">\r\n                    <img class=\"programm-icon\" src=\"./icons/programm-icons/notepad.png\" alt=\"icon\">\r\n                    <span class=\"programm-title\">${fileName} — Notepad</span>\r\n                </div>\r\n\r\n                <div class=\"right-programm-title\">\r\n                   ${this.renderButtonsPanel()}\r\n                </div>\r\n            </div>\r\n            \r\n            <nav class=\"notepad-nav\">\r\n                <a class=\"notepad-navigation-item file\">File  \r\n                    <ul class=\"lists-wrapper\">\r\n                        <li>\r\n                            <ul>\r\n                                <li><span class=\"notepad-menu-item\">Создать</span></li>\r\n                                <li><span class=\"notepad-menu-item\">Открыть</span></li>\r\n                                <li><span class=\"active_nav_item notepad-menu-item\" id=\"notepad-save-document\">Сохранить</span></li>\r\n                                <li><span class=\"active_nav_item notepad-menu-item\" id=\"notepad-saveAs-document\">Сохранить как...</span></li>\r\n                            </ul>\r\n                        </li>\r\n                        <li>\r\n                            <ul>\r\n                                <li><span>Параметры страницы</span></li>\r\n                                <li><span>Печать</span></li>\r\n                            </ul>\r\n                            \r\n                        </li>\r\n                        <li>\r\n                            <ul>\r\n                                <li><span>Выход</span></li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                </a>\r\n                <a class=\"notepad-navigation-item\">Edit</a>\r\n                <a class=\"notepad-navigation-item\">Format</a>\r\n                <a class=\"notepad-navigation-item\">View</a>\r\n                <a class=\"notepad-navigation-item\">HELP</a>\r\n            </nav>\r\n\r\n            <div class=\"notepad-text\">\r\n                <textarea name=\"notepad-message\" id=\"\" class=\"notepad-textarea\" resize>${aboutMeValue}</textarea>\r\n            </div>\r\n        `); \r\n        this.giveAllFuncs(what);\r\n    }\r\n\r\n    openFolder(fileName, what)\r\n    {\r\n        this.element.insertAdjacentHTML('afterbegin', `\r\n            <div class=\"title\">\r\n                <div class=\"left-programm-title left-explorer-title\">\r\n                    <img class=\"explorer-icon\" src=\"./icons/programm-icons/explorer.png\" alt=\"logo\">\r\n                    <span class=\"programm-title\">${fileName}</span>\r\n                </div>\r\n                    \r\n                <div class=\"right-programm-title right-explorer-title\">\r\n                    ${this.renderButtonsPanel()}\r\n                </div>\r\n            </div>\r\n            <nav class=\"explorer-nav\">\r\n                <a class=\"explorer-navigation-item active-explorer-navigation-item\">File</a>\r\n                <a class=\"explorer-navigation-item\">Home</a>\r\n                <a class=\"explorer-navigation-item\">Share</a>\r\n                <a class=\"explorer-navigation-item\">View</a>\r\n            </nav>\r\n            <div class=\"search\">\r\n                <div class=\"arrows\">\r\n                    <img src=\"./icons/programm-icons/to-arrow.png\" alt=\"left arrow\" class=\"left-arrow search-arrow\">\r\n                    <img src=\"./icons/programm-icons/to-arrow.png\" alt=\"right arrow\" class=\"right-arrow search-arrow\">\r\n                    <img src=\"./icons/programm-icons/to-arrow white.png\" alt=\"up arrow\" class=\"up-arrow search-arrow\">\r\n                </div>\r\n                <input type=\"text\" name=\"search\" class=\"main-search-input\">\r\n                <input type=\"text\" name=\"second-search\" class=\"second-search-input\" placeholder=\"Search: Desktop\">\r\n            </div>\r\n\r\n            <div class=\"main-content\">\r\n                <aside class=\"left-list\">\r\n                    <ul>\r\n                        <li class=\"list\">Desktop\r\n                            <ul class=\"inner-ul\">\r\n                                <li class=\"list\">Быстрый доступ</li>\r\n                                <li class=\"list\">Быстрый доступ</li>\r\n                                <li class=\"list\">Быстрый доступ</li>\r\n                                <li class=\"list\">Быстрый доступ</li>\r\n                                <li class=\"list\">Быстрый доступ</li>\r\n                                <li class=\"list\">Быстрый доступ</li>\r\n                                <li class=\"list\">Быстрый доступ</li>\r\n                                <li class=\"list\">Быстрый доступ</li>\r\n                                <li class=\"list\">Быстрый доступ</li>\r\n                                <li class=\"list\">Быстрый доступ</li>\r\n                                <li class=\"list\">Быстрый доступ</li>\r\n                            </ul>\r\n                        </li>        \r\n                    </ul>\r\n                </aside>\r\n                <section class=\"explorer-content-wrapper\">\r\n                    <div class=\"desktop-item bin\">\r\n                        <img class=\"bin\" src=\"./icons/desktop-icons/bin.png\" alt=\"Bin\">\r\n                        <span class=\"file-name\">Корзина</span>\r\n                    </div>\r\n\r\n                    <div class=\"desktop-item folder\">\r\n                        <img class=\"folder\" src=\"./icons/desktop-icons/folder.png\" alt=\"Folder\">\r\n                        <span class=\"file-name\">Новая папка</span>\r\n                    </div>\r\n\r\n                    <div class=\"desktop-item txt\">\r\n                        <img class=\"txt\" src=\"./icons/desktop-icons/txt.png\" alt=\"Txt-file\">\r\n                        <span class=\"file-name\">aboutMe.txt</span>\r\n                    </div>\r\n\r\n                    <div class=\"desktop-item shortcut\">\r\n                        <img class=\"shortcut\" src=\"./icons/desktop-icons/txt.png\" alt=\"shortcut\">\r\n                        <span class=\"file-name\">Имя ярлыка</span>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <div class=\"explorer-footer\">\r\n                <p class=\"explorer-footer-element-count\">Элементов: 29</p>\r\n            </div>\r\n        `); \r\n        this.giveAllFuncs(what);\r\n        (0,_explorer__WEBPACK_IMPORTED_MODULE_2__.swapExplorerArrows)();\r\n    }\r\n\r\n    openBrowser(link = 'https://vk.com/im', what)\r\n    {\r\n        this.element.insertAdjacentHTML('afterbegin', `\r\n            <div class=\"browser-title\">\r\n                <div class=\"left-programm-title left-browser-title\">\r\n                    <div class=\"browser-tab\">\r\n                        <p class=\"tab-name\">${link}</p>\r\n                    </div>\r\n                </div>\r\n                    \r\n                <div class=\"right-programm-title right-browser-title\">\r\n                    ${this.renderButtonsPanel()}\r\n                </div>\r\n            </div>\r\n            <div class=\"browser-navigate\">\r\n                <div class=\"buttons\">\r\n                    <img src=\"./icons/programm-icons/to-arrow.png\" alt=\"left arrow\" class=\"left-arrow search-arrow\">\r\n                    <img src=\"./icons/programm-icons/to-arrow.png\" alt=\"right arrow\" class=\"right-arrow search-arrow\">\r\n                    <img src=\"./icons/programm-icons/redo.png\" alt=\"redo\" class=\"up-arrow search-arrow\">\r\n                </div>\r\n                <div class=\"browser-search\">\r\n                    <input type=\"text\" name=\"\" class=\"browser-search\" placeholder=\"Введите поисковой запрос в Google или укажите URL\" value=${link}>\r\n                </div>\r\n                <div class=\"addons\">\r\n                    <div class=\"addon\" data-addon-id=\"1\"></div>\r\n                    <div class=\"addon\" data-addon-id=\"2\"></div>\r\n                    <div class=\"addon\" data-addon-id=\"3\"></div>\r\n                    <div class=\"addon\" data-addon-id=\"4\"></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"main\">\r\n                <iframe src=\"${link}\" class=\"browser-iframe\"></iframe>\r\n            </div>\r\n            <div class=\"browser-footer\">\r\n                <p>Привет я хром</p>\r\n            </div>\r\n        `);\r\n        this.giveAllFuncs(what);\r\n        (0,_browser__WEBPACK_IMPORTED_MODULE_3__.URLHandler)();\r\n    }\r\n\r\n    openBin(what)\r\n    {\r\n        console.log('From function:', \"Bin opened\");\r\n        this.giveAllFuncs(what);\r\n    }\r\n\r\n    openSettings(what)\r\n    {\r\n        this.element.style.height = '100vh';\r\n        this.element.style.width = '100vw';\r\n        this.element.insertAdjacentHTML('afterbegin',\r\n        `\r\n            <aside class=\"left\">\r\n                <div class=\"left-title\">\r\n                    <div class=\"left-programm-title\">\r\n                        <span class=\"settings-title\">Parametrs</span>\r\n                    </div>\r\n                </div>\r\n    \r\n                <div class=\"first-setting-div\">\r\n                    <div class=\"setting-item\" style=\"margin-bottom: 10px;\">\r\n                        <p class=\"setting-item home\">Home</p>\r\n                    </div>\r\n    \r\n                    <form class=\"setting-search\">\r\n                        <input type=\"text\" placeholder=\"Search for parametr\" class=\"search-input-text\">\r\n                        <input type=\"submit\" class=\"search-btn\" value=\"\">\r\n                    </form>\r\n                    \r\n                    <p class=\"parameter-name\">Personalize</p>\r\n    \r\n                </div>\r\n                \r\n                <ul class=\"all-settings\">\r\n                    <li>\r\n                        <div class=\"setting-item\">\r\n                            <p class=\"setting-item desktop-bg\">Desktop background</<p>\r\n                        </div>\r\n                    </li>\r\n    \r\n                    <li>\r\n                        <div class=\"setting-item\">\r\n                            <p class=\"setting-item desktop-bg\">Colors</<p>\r\n                        </div>\r\n                    </li>\r\n    \r\n                    <li>\r\n                        <div class=\"setting-item\">\r\n                            <p class=\"setting-item desktop-bg\">Login screen</<p>\r\n                        </div>\r\n                    </li>\r\n    \r\n                    <li>\r\n                        <div class=\"setting-item\">\r\n                            <p class=\"setting-item desktop-bg\">Themes</<p>\r\n                        </div>\r\n                    </li>\r\n    \r\n                    <li>\r\n                        <div class=\"setting-item\">\r\n                            <p class=\"setting-item desktop-bg\">Fonts</p>\r\n                        </div>\r\n                    </li>\r\n                </ul> \r\n            </aside>\r\n    \r\n            <aside class=\"right\">\r\n                <div class=\"right-programm-title right-settings-title\"> \r\n                    ${this.renderButtonsPanel()}\r\n                </div>\r\n    \r\n                <h1 class=\"right-aside-title\">Desktop background</h1>\r\n    \r\n                <img class=\"desktop-bg-example\" \r\n                    src=\"/assets/desktop-bg/IMG_7484.JPG\" \r\n                    alt=\"\">\r\n    \r\n                <h3>Background</h3>\r\n                <select id=\"select-bg-type\">\r\n                    <option></option>\r\n                    <option>Photo</option>\r\n                    <option>Color</option>\r\n                    <option>Slides</option>\r\n                </select>\r\n    \r\n                <div class=\"choosen\">\r\n                    <form enctype=\"multipart/form-data\" action=\"./php/files.php\" method=\"POST\">\r\n                        <input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"30000\" />\r\n                        <input type=\"file\" id=\"select-desktop-image\" name=\"bgImage\">\r\n                        <label class=\"select-desktop-image-label\" for=\"select-desktop-image\">Обзор</label>\r\n    \r\n                        <input type=\"submit\">\r\n                    </form>\r\n                </div>\r\n    \r\n                <h3 class=\"choose-pos\">Choose position</h3>\r\n                <select id=\"select-contain-type\">\r\n                    <option data-position=\"contain\">Contain</option>\r\n                    <option data-position=\"Cover\">Cover</option>\r\n                    <option data-position=\"100%\">100%</option>\r\n                    <option  data-position=\"background-repeat\">background-repeat</option>\r\n                </select>\r\n            </aside>\r\n        `);\r\n        this.giveAllFuncs(what);\r\n        (0,_settings__WEBPACK_IMPORTED_MODULE_1__.ChangeDesktopBgType)();\r\n        (0,_settings__WEBPACK_IMPORTED_MODULE_1__.SelectNewColor)();\r\n        document.querySelector('input.search-btn').addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            console.log('Searching...');\r\n        })\r\n\r\n        // создание элемента для панели задач\r\n        this.taskPanelShortcut = new TaskPanelElement(_assets_icons_desktop_icons_settings_png__WEBPACK_IMPORTED_MODULE_9__, this);\r\n        // добавляем элемент на панель задач\r\n        this.taskPanelShortcut.addToPanel();\r\n    }\r\n\r\n    //закрытие программы\r\n    closeProgram (event)\r\n    {\r\n        // удаляем из HTML окно программы\r\n        event.target.closest(`.${this.activeClassName}`).remove();\r\n\r\n        // удаляем из панели задач HTML ярлыка\r\n        this.taskPanelShortcut.removeFromPanel();\r\n    }\r\n\r\n    //развёртывание на полный экран\r\n    fullWindow (event) \r\n    {\r\n        let parentElement = event.target.closest(`.${this.activeClassName}`);\r\n\r\n        console.log(parentElement);\r\n\r\n        // сворачиваем приложение\r\n        if (parentElement.style.height === '100vh' && parentElement.style.width === '100vw')\r\n        {\r\n            console.log(\"parentElement.style.height == '100vh' && parentElement.style.width == '100vw'\");\r\n            parentElement.style.top = '7%';\r\n            parentElement.style.left = '14%';\r\n            parentElement.style.height = '50%';\r\n            parentElement.style.width = '60%';\r\n        }\r\n        // разворачиваем приложение\r\n        else {\r\n            console.log(\"parentElement.style.height !== '100vh' && parentElement.style.width !== '100vw'\");\r\n            parentElement.style.top = '0px';\r\n            parentElement.style.left = '0px';\r\n            parentElement.style.height = '100vh';\r\n            parentElement.style.width = '100vw';\r\n        }\r\n\r\n        // делаем активным на панели задач\r\n        this.taskPanelShortcut.toggleState();\r\n    }\r\n\r\n    //сворачивание окна\r\n    minifyWindow (event)\r\n    {\r\n        this.element.classList.add(\"minified\");\r\n\r\n        // убираем активность с элемента на панели задач\r\n        this.taskPanelShortcut.toggleState();\r\n    }\r\n\r\n    maximizeWindow() {\r\n        this.element.classList.remove(\"minified\");\r\n    }\r\n    \r\n    giveAllFuncs(what)\r\n    {\r\n        const mainElement = document.querySelector('main');\r\n        mainElement.insertAdjacentElement('afterbegin', this.element);\r\n        this.dragElement(document.querySelector(`div.${what}`));\r\n        (0,_desktop__WEBPACK_IMPORTED_MODULE_0__.clearActiveElements)();\r\n        this.element.querySelector(\".close\").addEventListener('click', this.closeProgram);\r\n        this.element.querySelector('.full-window').addEventListener('click', this.fullWindow);\r\n        this.element.querySelector('.semi-close').addEventListener('click', this.minifyWindow);\r\n    }\r\n}\r\n\r\nclass TaskPanelElement {\r\n    constructor(pathToIcon, linkedApp) {\r\n        this.taskProgram = document.createElement(\"div\");\r\n        this.taskProgram.classList.add(\"task-panel-programm\", \"opened\", \"active\");\r\n\r\n        // create icon\r\n        const icon = document.createElement(\"img\");\r\n        icon.classList.add(\"programm-icon\");\r\n        icon.src = pathToIcon;\r\n\r\n        this.taskProgram.appendChild(icon);\r\n\r\n        // привязываем экземпляр приложения к ярылку на панели задач\r\n        this.linkedApp = linkedApp;\r\n\r\n        this.taskProgram.addEventListener(\"click\", e => this.maximizeApp());\r\n    }\r\n\r\n    addToPanel() {\r\n        document.querySelector(\".left-side-footer\").appendChild(this.taskProgram);\r\n    }\r\n\r\n    removeFromPanel() {\r\n        this.taskProgram.remove();\r\n    }\r\n\r\n    toggleState() {\r\n        this.taskProgram.classList.toggle(\"active\");\r\n    }\r\n\r\n    maximizeApp(clickEvent) {\r\n        this.linkedApp.maximizeWindow();\r\n    }\r\n}\r\n\r\n// document.getElementById('createFolder').addEventListener('click', () => {\r\n//     new DesktopItem().create('Новая папка', 'folder');\r\n// })\r\n\r\n// document.getElementById('createText').addEventListener('click', () => {\r\n//     new DesktopItem().create('Новая текстовый файл', 'txt');\r\n// })\n\n//# sourceURL=webpack://web-win-10-webpack/./src/Classes.js?");

/***/ }),

/***/ "./src/browser.js":
/*!************************!*\
  !*** ./src/browser.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   URLHandler: () => (/* binding */ URLHandler)\n/* harmony export */ });\nconst URLHandler = () =>\r\n{\r\n    const url = document.querySelector('.browser-search');\r\n    \r\n    url.addEventListener('keyup', (e) =>\r\n    {\r\n        function renderUrl(url)\r\n        {\r\n            //рендер iframe и вставляем ссылку в \"адресную строку\"\r\n            document.querySelector('.browser-iframe').src = url;\r\n            e.target.value = url;\r\n        }\r\n\r\n        let isWWWW = false;\r\n\r\n        if (e.key === 'Enter')\r\n        {\r\n            let urlArray = [];\r\n            let urlValue = e.target.value;\r\n\r\n            console.log('urlValue: ', urlValue);\r\n\r\n            urlArray = urlValue.split('://');\r\n            console.log('urlArray до преобразования адреса: ', urlArray);\r\n            \r\n\r\n            if(urlArray[0] !== 'https')\r\n            {\r\n                if (urlArray[0] !== 'http')\r\n                {\r\n                    urlArray = urlValue.split('.');\r\n                }\r\n\r\n                if (urlArray.includes('www'))\r\n                {\r\n                    urlArray.splice(urlArray.indexOf('www'), 1);\r\n                }\r\n\r\n                //чтобы адрес начинался с https://\r\n                urlArray.unshift('https://');\r\n\r\n                //чтобы домен был .(ru)\r\n                urlArray[urlArray.length - 1] = `.${urlArray[urlArray.length - 1]}`;\r\n\r\n                if (urlArray.length > 3)\r\n                {\r\n                    for (let i=1; i < urlArray.length - 2; i++)\r\n                    {\r\n                        urlArray[i] = `${urlArray[i]}.`;\r\n                    }\r\n                }\r\n\r\n                let newUrl = urlArray.join('');\r\n\r\n                renderUrl(newUrl)\r\n            } else if(urlArray[0] === 'https://')\r\n            {\r\n                renderUrl(urlValue);\r\n            }\r\n\r\n            console.log('urlArray после преобразования адреса: ', urlArray);\r\n        }\r\n    })\r\n}\n\n//# sourceURL=webpack://web-win-10-webpack/./src/browser.js?");

/***/ }),

/***/ "./src/context-menu.js":
/*!*****************************!*\
  !*** ./src/context-menu.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteContextMenus: () => (/* binding */ deleteContextMenus),\n/* harmony export */   makeDesktopContextMenu: () => (/* binding */ makeDesktopContextMenu),\n/* harmony export */   makeFileContextMenu: () => (/* binding */ makeFileContextMenu)\n/* harmony export */ });\n/* harmony import */ var _desktop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./desktop */ \"./src/desktop.js\");\n/* harmony import */ var _Classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Classes */ \"./src/Classes.js\");\nconst mainElement = document.querySelector('main');\r\n\r\n\r\n\r\n\r\n//скрытие контекстного меню\r\nconst deleteContextMenus = () =>\r\n{\r\n    let allContexts = document.querySelectorAll('div.context-menu');\r\n    allContexts.forEach( (item) => {\r\n        item.remove();\r\n    })\r\n    if(!(document.querySelector('.newFile') === null)){\r\n        document.querySelector('.newFile').remove();\r\n    }\r\n}\r\n\r\n// функция проверки правильности свойств файла (название, тип)\r\n// принимает в себя тип файла из data-атрибута, сгенерированное в замисимости от типа имя файла\r\n// проверяет, пустое ли имя файла, в правильном ли типе (должен быть Int > 0) пришел тип файла\r\n// возвращает сгенерированный объект FormData для отправки с помощью AJAX.\r\nconst prepareFileInfo = (fileType, fileName) =>\r\n{\r\n    let formData = new FormData();\r\n\r\n    console.log('fileType', fileType);\r\n    console.log('fileType', fileName);\r\n    console.log('userId', (0,_desktop__WEBPACK_IMPORTED_MODULE_0__.getUserInfo)(window.location.href).id);\r\n\r\n    if (fileName.trim() !== '') \r\n    {\r\n        formData.append('fileName', fileName);\r\n    } else {\r\n        throw new Error('Пустое имя файла!')\r\n    }\r\n\r\n    if (typeof fileType === 'number')\r\n    {\r\n        if (fileType !== 0) {\r\n            formData.append('fileType', fileType);\r\n        } else\r\n        {\r\n            throw new Error('Неизвестный тип файла!')\r\n        }\r\n    } else {\r\n        throw new Error('Тип файла передан в неправильном формате!')\r\n    }\r\n\r\n    formData.append('id', (0,_desktop__WEBPACK_IMPORTED_MODULE_0__.getUserInfo)(window.location.href).id);\r\n    \r\n    return formData;\r\n}\r\n\r\n/*\r\nфункция добавления файла в БД.\r\nПринимает в себя имя файла, и тип файла, которые отдает на проверку функции, описанной выше, \r\nв поле data получает от неё { FormData }\r\n*/\r\nconst insertFileToDb = async (fileTypeToPrepare, fileNameToPpepare) => {\r\n    await fetch('/php/newFile.php', {\r\n        method: 'POST',\r\n        body: prepareFileInfo(fileTypeToPrepare, fileNameToPpepare)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => console.log(json))\r\n\r\n    ;(0,_desktop__WEBPACK_IMPORTED_MODULE_0__.renderFiles)();\r\n}\r\n\r\nconst makeFileContextMenu = (event) => {\r\n    event.preventDefault();\r\n\r\n    let newFileContextMenu = document.createElement('div');\r\n    newFileContextMenu.classList.add('context-menu');\r\n    newFileContextMenu.insertAdjacentHTML('afterbegin',\r\n    `\r\n        <ul class=\"context-menu-item first\">\r\n            <li><p class=\"context-item\" style=\"font-weight: bold;\">Открыть</p></li>\r\n        </ul>\r\n            \r\n        <ul class=\"context-menu-item second\">\r\n            <li><p class=\"context-item\">Закрепить на панели задач</p></li>\r\n        </ul>\r\n        \r\n        <ul class=\"context-menu-item third\">\r\n            <li><p class=\"context-item delete\">Удалить</p></li>\r\n            <li><p class=\"context-item rename\">Переименовать</p></li>\r\n        </ul>\r\n    `);\r\n\r\n    newFileContextMenu.style.top = `${event.clientY}px`;\r\n    newFileContextMenu.style.left = `${event.clientX}px`;\r\n\r\n    deleteContextMenus();\r\n    (0,_desktop__WEBPACK_IMPORTED_MODULE_0__.clearActiveElements)();\r\n    (0,_desktop__WEBPACK_IMPORTED_MODULE_0__.makeFileActive)(event);\r\n\r\n    mainElement.prepend(newFileContextMenu);\r\n}\r\n\r\n//открытие контекстного меню\r\nconst makeDesktopContextMenu = (event) =>\r\n{\r\n    // console.log(event.target);\r\n\r\n    //чтобы на файлы тыкая не появлялась контекстая менюшка раюочего стола\r\n    if (\r\n        event.target.classList.contains('desktop-item') ||\r\n        event.target.tagName === 'IMG' ||\r\n        event.target.tagName === 'SPAN'\r\n    ) {\r\n        return;\r\n    }\r\n\r\n    let bool = false;\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    \r\n    let newDiv = document.createElement('div');\r\n    newDiv.classList.add('context-menu')\r\n    newDiv.insertAdjacentHTML('afterbegin',\r\n    `\r\n    <ul class=\"context-menu-item first\">\r\n        <li><p class=\"context-item view\">View</p></li>\r\n        <li><p class=\"context-item sort\">Sort by</p></li>\r\n        <li><p class=\"context-item refresh\">Refresh</p></li>\r\n    </ul>\r\n    \r\n    <ul class=\"context-menu-item second\">\r\n        <li><p class=\"context-item paste\">Paste</p></li>\r\n        <li><p class=\"context-item paste-shortcut\">Paste shortcut</p></li>\r\n    </ul>\r\n\r\n    \r\n    <ul class=\"context-menu-item third\">\r\n        <p class=\"context-item new\">New</p>\r\n    </ul>\r\n\r\n    <p class=\"context-item personalize\">Personalize</p>\r\n    `)\r\n    \r\n    newDiv.style.top = `${event.clientY}px`;\r\n    newDiv.style.left = `${event.clientX}px`;\r\n\r\n    deleteContextMenus();\r\n    (0,_desktop__WEBPACK_IMPORTED_MODULE_0__.clearActiveElements)();\r\n    (0,_desktop__WEBPACK_IMPORTED_MODULE_0__.makeFileActive)(event);\r\n    \r\n    mainElement.prepend(newDiv);\r\n\r\n    function generateNewFile() {\r\n        //счетчик файлов\r\n        function counterFunc (counter) {\r\n            let innerCounter = counter;\r\n            return function () {\r\n                return ++innerCounter;\r\n            }\r\n        }\r\n\r\n        const folderCounter = counterFunc(0);\r\n        const txtCounter = counterFunc(0);\r\n\r\n        document.querySelectorAll('div.newFile span.new-desktop-item')\r\n        .forEach(button => {\r\n            button.addEventListener('click', (e) => {\r\n                let fileType = parseInt(e.target.dataset.dbtype, 10);\r\n                let fileName = '', tempFileId = 0;\r\n\r\n                switch (e.target.classList[1]) {\r\n                    case 'txt':\r\n                        tempFileId = txtCounter();\r\n                        fileName = `Новый текстовый документ ${tempFileId}`;\r\n                        break;\r\n\r\n                    case 'folder':\r\n                        tempFileId = folderCounter();\r\n                        fileName = `Новая папка ${tempFileId}`;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                insertFileToDb(fileType, fileName);\r\n            })\r\n        })\r\n    }\r\n\r\n    //добавляет подпункт \"Создать новый текстовый файл\"\r\n    function createNewFile()\r\n    {\r\n        let newFile = document.createElement('div');\r\n        newFile.classList.add('newFile');\r\n        newFile.insertAdjacentHTML('afterbegin', \r\n        `\r\n            <span class=\"new-desktop-item txt\" data-dbtype=\"1\">Текстовый документ</span>\r\n            <span class=\"new-desktop-item folder\" data-dbtype=\"2\">Папка</span>\r\n        `);\r\n\r\n        newFile.style.top = `${event.clientY + 153}px`;\r\n        newFile.style.left = `${event.clientX + 300}px`;\r\n\r\n        mainElement.prepend(newFile);\r\n\r\n        function contextMenu(event){\r\n\r\n            // console.log('1');\r\n            // console.log(event.target);\r\n            if(!(document.querySelector('.newFile') === null)){\r\n                removeNewFile();\r\n            }\r\n            document.querySelector('.context-menu').removeEventListener('mouseover', contextMenu);\r\n\r\n        }\r\n\r\n        generateNewFile();\r\n\r\n        if (bool == false)\r\n        {\r\n            document.querySelector('p.new').addEventListener('mouseleave', () => {  //выход мыши с \"New\"\r\n                document.querySelector('.context-menu').addEventListener('mouseover', contextMenu) //добавляем событие наведения на контекстное меню\r\n            })\r\n            bool = true;\r\n        }\r\n\r\n    }\r\n\r\n    function showNewFile(){\r\n        document.querySelector('p.new').addEventListener('mouseover', () => {\r\n            createNewFile();\r\n        })\r\n    }\r\n\r\n    function removeNewFile(){\r\n        document.querySelector('.newFile').remove();\r\n    }\r\n\r\n    showNewFile();\r\n}\r\n\n\n//# sourceURL=webpack://web-win-10-webpack/./src/context-menu.js?");

/***/ }),

/***/ "./src/desktop.js":
/*!************************!*\
  !*** ./src/desktop.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkFileTypeOnDBLClick: () => (/* binding */ checkFileTypeOnDBLClick),\n/* harmony export */   clearActiveElements: () => (/* binding */ clearActiveElements),\n/* harmony export */   getUserConfig: () => (/* binding */ getUserConfig),\n/* harmony export */   getUserInfo: () => (/* binding */ getUserInfo),\n/* harmony export */   makeFileActive: () => (/* binding */ makeFileActive),\n/* harmony export */   renderFiles: () => (/* binding */ renderFiles)\n/* harmony export */ });\n/* harmony import */ var _context_menu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./context-menu */ \"./src/context-menu.js\");\n/* harmony import */ var _Classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Classes */ \"./src/Classes.js\");\nlet fileId;\r\nlet userId = null;\r\n\r\n\r\n\r\n\r\nfunction getUserInfo (url) {\r\n    // console.log(url);\r\n    //long function\r\n\r\n    // const allParams = url.split('?');\r\n    // const params = allParams[1].split('&');\r\n    // let paramsObject = {};\r\n    // let tempArray = [];\r\n    // params.forEach((param, index) => {\r\n    //     tempArray[index] = [...param.split('=')];\r\n    // })\r\n    // tempArray.forEach(param => {\r\n    //     paramsObject[param[0]] = param[1];\r\n    // })\r\n    // console.log('long functioon result');\r\n    // console.log(paramsObject);\r\n\r\n    //short function\r\n    // let paramsObject1 = {};\r\n    //\r\n    // const params1 = url.split('?')[1].split('&');\r\n    //\r\n    // params1.forEach(param => {\r\n    //     paramsObject1[param.split('=')[0]] = param.split('=')[1];\r\n    // })\r\n    //\r\n    // // console.log('short function result');\r\n    // // console.log(paramsObject1);\r\n    // console.log('paramsObject1', paramsObject1);\r\n    // return paramsObject1;\r\n\r\n    // const urlParams = new URLSearchParams(window.location.href);\r\n    // console.log(urlParams.getAll())\r\n}\r\n\r\nasync function getUserConfig(id)\r\n{\r\n    try {\r\n        const response = await fetch(`./../php/getConfig.php?id=${id}`);\r\n        const data = await response.json();\r\n\r\n        if (response.status < 200 && response.status >= 300) {\r\n            // TODO error\r\n\r\n            return;\r\n        }\r\n\r\n        if (data !== null)\r\n        {\r\n            //фото или цвет ?\r\n            //разбиваем строку по '.' (отделяем расширение файла от названия)\r\n            let image = data.bg.split('.');\r\n\r\n            //если это картинка, то элементов в массиве будет 2\r\n            //если цвет, то один\r\n            if (image.length > 1)\r\n            {\r\n                document.querySelector('main').style.backgroundImage = `url('./desktop-bg/${data.bg}')`;\r\n            } else\r\n            {\r\n                document.querySelector('main').style.backgroundImage = '';\r\n                document.querySelector('main').style.backgroundColor = data.bg;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            console.warn('bg is null')\r\n        }\r\n    } catch(e) {\r\n        console.error(e);\r\n    }\r\n}\r\n\r\n//функция выделения \"файлов\" при клике\r\nconst makeFileActive = (event) => {\r\n    let target = event.target.parentElement;\r\n\r\n    if (target.tagName === \"DIV\" && target.classList.contains('desktop-item')) {\r\n        clearActiveElements();\r\n        target.classList.toggle('active');\r\n    }\r\n\r\n    if(target.tagName === \"MAIN\" || target.tagName === \"BODY\") {\r\n        clearActiveElements();\r\n    }\r\n}\r\n\r\n//убираем выделение с файла\r\nconst clearActiveElements = () => {\r\n    let activeItems = document.querySelectorAll('div.active');\r\n    activeItems.forEach((item) => {\r\n        item.classList.remove('active');\r\n    })\r\n    ;(0,_context_menu__WEBPACK_IMPORTED_MODULE_0__.deleteContextMenus)();\r\n}\r\n\r\nconst getFilesFromDB = async (userId) => {\r\n    // return await fetch(`../php/getfiles.php?id=${getUserInfo(window.location.href).id}`);\r\n    return await fetch(`../php/getfiles.php?id=${userId}`);\r\n}\r\n\r\nconst renderFiles = async () => {\r\n    if (!userId) return;\r\n\r\n    await getFilesFromDB()\r\n    .then(res => res.json())\r\n    .then(items => {\r\n        items.forEach(file => {\r\n            new _Classes__WEBPACK_IMPORTED_MODULE_1__.DesktopItem(file.fileId).create(file.filename, file.type_name);\r\n        });\r\n    })\r\n    .finally(\r\n        () => \r\n        document.querySelectorAll('div.desktop-item').forEach(item => item.addEventListener('contextmenu', _context_menu__WEBPACK_IMPORTED_MODULE_0__.makeFileContextMenu))\r\n    )\r\n    .catch(error => console.error(error))\r\n}\r\n\r\n//проверяем, на что кликнули - ярлык, папка, текстовый документ\r\nconst checkFileTypeOnDBLClick = (event) => {\r\n    const target = event.target.parentElement;\r\n    const fileName = target.lastElementChild.textContent;\r\n\r\n    if (target.classList.contains('bin')) {\r\n        console.log('bin');\r\n        //new Program('bin').openBin('bin');\r\n    }\r\n\r\n    if (target.classList.contains('txt')) {\r\n        fileId = target.dataset.idfile;\r\n        console.log('fileId', fileId);\r\n        // console.log('fileId - 3', fileId - 3);\r\n        new _Classes__WEBPACK_IMPORTED_MODULE_1__.Program('notepad').openTxt(fileName, 'notepad', filesFromDatabase[fileId-3].file_msg);\r\n    }\r\n\r\n    if (target.classList.contains('folder')) {\r\n        new _Classes__WEBPACK_IMPORTED_MODULE_1__.Program('explorer').openFolder(fileName, 'explorer');\r\n    }\r\n\r\n    if (target.classList.contains('shortcut')) {\r\n        new _Classes__WEBPACK_IMPORTED_MODULE_1__.Program('browser').openBrowser('https://forum.auto.ru', 'browser');\r\n    }\r\n\r\n    if (target.classList.contains('desktop-settings'))\r\n    {\r\n        new _Classes__WEBPACK_IMPORTED_MODULE_1__.Program('settings').openSettings('settings');\r\n    }\r\n\r\n    // getFilesFromDB()\r\n    // .then(res => {\r\n    //     return res.json();\r\n    // })\r\n    // .then(filesFromDatabase => {\r\n    //     let target = event.target.parentElement;\r\n    //     let fileName = target.lastElementChild.textContent;\r\n    //\r\n    // })\r\n}\r\n\r\n// получаем ID пользователя из localStorage после авторизации\r\nuserId = localStorage.getItem(\"userId\");\r\nif (userId) {\r\n    getUserConfig(userId);\r\n}\n\n//# sourceURL=webpack://web-win-10-webpack/./src/desktop.js?");

/***/ }),

/***/ "./src/explorer.js":
/*!*************************!*\
  !*** ./src/explorer.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   swapExplorerArrows: () => (/* binding */ swapExplorerArrows)\n/* harmony export */ });\n//подмена картинок в проводнике\r\nconst swapExplorerArrows = () => {\r\n    document.querySelector('img.left-arrow').addEventListener('mouseover', (event) => {\r\n        document.querySelector('img.left-arrow').setAttribute('src', './icons/programm-icons/to-arrow blue.png');\r\n    })\r\n    document.querySelector('img.left-arrow').addEventListener('mouseout', (event) => {\r\n        document.querySelector('img.left-arrow').setAttribute('src', './icons/programm-icons/to-arrow white.png');\r\n    })\r\n}\n\n//# sourceURL=webpack://web-win-10-webpack/./src/explorer.js?");

/***/ }),

/***/ "./src/footer.js":
/*!***********************!*\
  !*** ./src/footer.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setDate: () => (/* binding */ setDate),\n/* harmony export */   swapWinLogo: () => (/* binding */ swapWinLogo)\n/* harmony export */ });\n//подмена картинок \"Пуск\"\r\nconst swapWinLogo = () => {\r\n    document.querySelector('div.task-panel-programm').addEventListener('mouseover', (event) => {\r\n        document.querySelector('img.win').setAttribute('src', './icons/left-panel/win/win-blue.png');\r\n    })\r\n    document.querySelector('div.task-panel-programm').addEventListener('mouseout', (event) => {\r\n        document.querySelector('img.win').setAttribute('src', './icons/left-panel/win/win-white.png');\r\n    })\r\n}\r\n\r\n//функция получения и вывода времени\r\nconst setDate = () => {\r\n    //выводим время\r\n    let date = new Date();\r\n    let minutes, hours, seconds, day, month;\r\n\r\n    //чекаем, если часов меньше 10 (однозначное число), то добавлячем 0;\r\n    date.getMinutes() < 10 ? minutes = \"0\" + date.getMinutes() : minutes = date.getMinutes();\r\n\r\n    //чекаем, если минут меньше 10 (однозначное число), то добавлячем 0;\r\n    date.getHours() < 10 ? hours = \"0\" + date.getHours() : hours = date.getHours();\r\n\r\n    date.getSeconds()+1 < 10 ? seconds = \"0\" + (date.getSeconds()+1) : seconds = date.getSeconds();\r\n\r\n    //чекаем номер дня\r\n    date.getDate() < 10 ? day = \"0\" + date.getDate() : day = date.getDate();\r\n\r\n    //чекаем номер месяца. +1 потому что 0-11 месяцы считаются\r\n    date.getMonth()+1 < 10 ? month = \"0\" + (date.getMonth()+1) : month = (date.getMonth()+1);\r\n\r\n    //выводим время и дату\r\n    document.querySelector('span.time').textContent = hours + ':' + minutes + ':' + seconds;\r\n    document.querySelector('span.date').textContent = day + '.' + month + '.' + date.getFullYear();\r\n}\n\n//# sourceURL=webpack://web-win-10-webpack/./src/footer.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _desktop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./desktop */ \"./src/desktop.js\");\n/* harmony import */ var _footer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./footer */ \"./src/footer.js\");\n/* harmony import */ var _context_menu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context-menu */ \"./src/context-menu.js\");\n\r\n\r\n \r\n\r\n// let value, allAudio; //тута мы будем громкость менять\r\n\r\nconst mainElement = document.querySelector('main');\r\n\r\n//каждую минуту перевыводим время и дату\r\nsetInterval(() =>{\r\n    (0,_footer__WEBPACK_IMPORTED_MODULE_1__.setDate)();\r\n}, 1000);\r\n\r\n(0,_footer__WEBPACK_IMPORTED_MODULE_1__.setDate)();\r\n\r\ndocument.querySelectorAll('*:not(.desktop-item)').forEach((item) =>\r\n{\r\n    item.addEventListener('contextmenu', _context_menu__WEBPACK_IMPORTED_MODULE_2__.makeDesktopContextMenu)\r\n})\r\n\r\n;(0,_desktop__WEBPACK_IMPORTED_MODULE_0__.renderFiles)();\r\n\r\nmainElement.addEventListener('click', _desktop__WEBPACK_IMPORTED_MODULE_0__.makeFileActive);\r\nmainElement.addEventListener('dblclick', _desktop__WEBPACK_IMPORTED_MODULE_0__.checkFileTypeOnDBLClick);\r\n\r\n(0,_footer__WEBPACK_IMPORTED_MODULE_1__.swapWinLogo)();\n\n//# sourceURL=webpack://web-win-10-webpack/./src/main.js?");

/***/ }),

/***/ "./src/settings.js":
/*!*************************!*\
  !*** ./src/settings.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeDesktopBgType: () => (/* binding */ ChangeDesktopBgType),\n/* harmony export */   SelectNewColor: () => (/* binding */ SelectNewColor),\n/* harmony export */   imageHandler: () => (/* binding */ imageHandler)\n/* harmony export */ });\n/* harmony import */ var _desktop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./desktop */ \"./src/desktop.js\");\n\r\n\r\nlet colors = [\r\n    '#ff8c00', \r\n    '#e81123', \r\n    '#d13438', \r\n    '#c30052', \r\n    '#bf0077',\r\n    '#9a0089',\r\n    '#881798',\r\n    '#744da9',\r\n    '#10893e',\r\n    '#107c10',\r\n    '#018574',\r\n    '#2d7d9a',\r\n    '#0063b1',\r\n    '#6b69d6',\r\n    '#8e8cd8',\r\n    '#8764b8',\r\n    '#038387',\r\n    '#486860',\r\n    '#525e54',\r\n    '#7e735f',\r\n    '#4c4a48',\r\n    '#515c6b',\r\n    '#4a5459'\r\n];\r\n\r\nlet photos = [\r\n    '../desktop-bg/DSC01142.JPG',\r\n    '../desktop-bg/ken_roczen_suzuki_2015.jpg',\r\n    '../desktop-bg/pepega.jpg',\r\n]\r\n\r\nclass DesktopPhoto\r\n{\r\n    constructor(index) {\r\n        this.elem = document.createElement('div');\r\n        this.elem.dataset.number = index;\r\n    }\r\n\r\n    createPhoto(imageUrl) {\r\n        this.elem.classList.add('desktop-photo');\r\n        this.elem.backgroundImage = `url(${imageUrl})`\r\n    }\r\n\r\n    createColor(color)\r\n    {\r\n        this.elem.classList.add('desktop-photo');\r\n        this.elem.backgroundColor = color\r\n    }\r\n\r\n    render() {\r\n        const renderTo_Elem = document.querySelector('.choosen');\r\n    }\r\n}\r\n\r\nconst ChangeDesktopBgType = () =>\r\n{\r\n    const selectBgDesktop = document.getElementById('select-bg-type'); //сам селект\r\n    selectBgDesktop.addEventListener('change', (event) =>       //при изменении\r\n    {\r\n        let value = event.target.options.selectedIndex;             //чекаем, какой <option> выбран\r\n        let choosen = document.querySelector('.choosen');           // блок с заголовком и цветами/фотографиями\r\n        \r\n        switch (value) {\r\n            case 1: //value = 0 - фотки\r\n                choosen.innerHTML = \r\n                `<h3 id=\"choose-photo\">Choose a photo</h3>\r\n                <div class=\"desktop-photos\"></div>\r\n                <form enctype=\"multipart/form-data\" action=\"./php/files.php\" method=\"POST\">\r\n                    <input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"30000\" />\r\n                    <input type=\"file\" id=\"select-desktop-image\" name=\"bgImage\">\r\n                    <label class=\"select-desktop-image-label\" for=\"select-desktop-image\">Обзор</label>\r\n\r\n                    <input type=\"submit\">\r\n                </form>\r\n                `\r\n                document.querySelector('h3.choose-pos').style.display = 'block';\r\n                document.getElementById('select-contain-type').style.display = 'block';\r\n\r\n                photos.forEach(() => {\r\n                    document.querySelector('.desktop-photos').insertAdjacentHTML('beforeend',\r\n                    `<div class=\"desktop-photo\"></div>`\r\n                )})\r\n\r\n                document.querySelectorAll('div.desktop-photo').forEach((element, index) => {\r\n                    console.log(index);\r\n                    element.style.backgroundImage = `url(${photos[index]})`;\r\n                    element.dataset.number = index;\r\n                });\r\n                break;\r\n            \r\n            case 2: //value = 1 - сплошной цвет                                             \r\n                choosen.innerHTML = \r\n                `\r\n                <h3 id=\"choose-color\">Choose a color</h3>\r\n                <div class=\"desktop-colors\"></div>`;\r\n                \r\n                colors.forEach(element => {     //создаем дивы\r\n                    document.querySelector('.desktop-colors').insertAdjacentHTML('beforeend', \r\n                    `\r\n                    <div class=\"desktop-color\"></div>\r\n                    `)\r\n                });\r\n\r\n                document.querySelectorAll('div.desktop-color').forEach( (item, index) => {  //закрашиваем дивы цветами из массива\r\n                    item.style.backgroundColor = colors[index];\r\n                    item.dataset.num = index;\r\n                })\r\n                document.querySelector('h3.choose-pos').style.display = 'none'; //скрваем нижний блок\r\n                document.getElementById('select-contain-type').style.display = 'none'; //скрваем нижний блок\r\n                break;\r\n\r\n            case 3:\r\n                console.log('value =', 2);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        \r\n    });\r\n}\r\n\r\nconst changeBg = () =>\r\n{\r\n    let newBg;\r\n    if(document.getElementById('choose-photo'))\r\n    {\r\n        newBg = document.querySelector('div.desktop-photo-active').style.backgroundImage;\r\n        // document.querySelector('main').style.backgroundColor = '';\r\n        // document.querySelector('main').style.backgroundImage = newBg;\r\n    }\r\n\r\n    if(document.getElementById('choose-color'))\r\n    {\r\n        newBg = document.querySelector('div.desktop-color-active').style.backgroundColor;\r\n        // document.querySelector('main').style.backgroundImage = 'none';\r\n        // document.querySelector('main').style.backgroundColor = newBg;\r\n    }\r\n\r\n    async function saveBgToDb (bgToSave) {\r\n        let config = new FormData();\r\n\r\n        //если не цвет, узнаем имя картинки\r\n        if (bgToSave.split('/')[2] !== undefined)\r\n        {\r\n            bgToSave = bgToSave.split('/')[2].slice(0, bgToSave.split('/')[2].indexOf('\"'));\r\n        }\r\n        \r\n        config.append('bg', bgToSave);\r\n        config.append('idUser', (0,_desktop__WEBPACK_IMPORTED_MODULE_0__.getUserInfo)(window.location.href).id);\r\n        \r\n        await fetch(`./../php/saveConfig.php`, {\r\n            method: 'POST',\r\n            body: config\r\n        })\r\n        .then(res => res.json())\r\n        .then(text => {\r\n            console.log(text);\r\n            (0,_desktop__WEBPACK_IMPORTED_MODULE_0__.getUserConfig)((0,_desktop__WEBPACK_IMPORTED_MODULE_0__.getUserInfo)(window.location.href).id);\r\n        })\r\n    }\r\n\r\n    saveBgToDb(newBg);\r\n}\r\n\r\nconst clearCurrentColor = (elem) =>\r\n{\r\n    if(elem.classList.contains('desktop-color'))\r\n    {\r\n        let allCurrentColors = document.querySelectorAll('div.desktop-color-active');\r\n        allCurrentColors.forEach( (item) =>\r\n        {\r\n            item.classList.remove('desktop-color-active');\r\n            item.innerHTML = ``;\r\n        })\r\n\r\n        elem.classList.add('desktop-color-active')\r\n        elem.innerHTML = `<div class=\"current-color\">✓</div>`;\r\n    }\r\n    if(elem.classList.contains('desktop-photo'))\r\n    {\r\n        let allCurrentColors = document.querySelectorAll('div.desktop-photo-active');\r\n        allCurrentColors.forEach( (item) =>\r\n        {\r\n            item.classList.remove('desktop-photo-active');\r\n        })\r\n        elem.classList.add('desktop-photo-active')\r\n    }\r\n}\r\n\r\nconst SelectNewColor = () =>\r\n{\r\n    document.querySelector('.choosen').addEventListener('click', (event) => {\r\n\r\n        if(document.getElementById('choose-photo'))\r\n        {\r\n            console.log('Выбор фото');\r\n            if (event.target.dataset.number)\r\n            {\r\n                console.log(event.target.dataset.number);\r\n                event.target.classList.add('desktop-photo-active');\r\n                clearCurrentColor(event.target);\r\n            }\r\n        }\r\n\r\n        if(document.getElementById('choose-color'))\r\n        {\r\n            console.log('Выбор цвета');\r\n            if (event.target.dataset.num)\r\n            {\r\n                console.log(event.target.dataset.num);\r\n                event.target.insertAdjacentHTML('afterbegin', `\r\n                <div class=\"current-color\">✓</div>\r\n                `);\r\n                event.target.classList.add('desktop-color-active');\r\n                clearCurrentColor(event.target);\r\n            }\r\n        }\r\n        changeBg();\r\n    })\r\n}\r\n\r\nfunction imageHandler()\r\n{\r\n    document.getElementById('select-desktop-image').addEventListener('input', (event) => {\r\n        console.log('1');\r\n    })\r\n}\r\n\n\n//# sourceURL=webpack://web-win-10-webpack/./src/settings.js?");

/***/ }),

/***/ "./assets/icons/desktop-icons/folder.png":
/*!***********************************************!*\
  !*** ./assets/icons/desktop-icons/folder.png ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"images\\\\folder.cddf0c441f505ff88eb1.png\";\n\n//# sourceURL=webpack://web-win-10-webpack/./assets/icons/desktop-icons/folder.png?");

/***/ }),

/***/ "./assets/icons/desktop-icons/settings.png":
/*!*************************************************!*\
  !*** ./assets/icons/desktop-icons/settings.png ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"images\\\\settings.bafac7cedbb5031e244f.png\";\n\n//# sourceURL=webpack://web-win-10-webpack/./assets/icons/desktop-icons/settings.png?");

/***/ }),

/***/ "./assets/icons/desktop-icons/txt.png":
/*!********************************************!*\
  !*** ./assets/icons/desktop-icons/txt.png ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"images\\\\txt.ceee4da64247b85bc05d.png\";\n\n//# sourceURL=webpack://web-win-10-webpack/./assets/icons/desktop-icons/txt.png?");

/***/ }),

/***/ "./assets/icons/programm-icons/close.svg":
/*!***********************************************!*\
  !*** ./assets/icons/programm-icons/close.svg ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"icons\\\\close.c31a7323a70229c7885a.svg\";\n\n//# sourceURL=webpack://web-win-10-webpack/./assets/icons/programm-icons/close.svg?");

/***/ }),

/***/ "./assets/icons/programm-icons/full-widnow.svg":
/*!*****************************************************!*\
  !*** ./assets/icons/programm-icons/full-widnow.svg ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"icons\\\\full-widnow.267a8b32e83e398b1f89.svg\";\n\n//# sourceURL=webpack://web-win-10-webpack/./assets/icons/programm-icons/full-widnow.svg?");

/***/ }),

/***/ "./assets/icons/programm-icons/minify.svg":
/*!************************************************!*\
  !*** ./assets/icons/programm-icons/minify.svg ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"icons\\\\minify.5013db1be9a59a8fab8d.svg\";\n\n//# sourceURL=webpack://web-win-10-webpack/./assets/icons/programm-icons/minify.svg?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;